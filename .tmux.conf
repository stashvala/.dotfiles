# set shell
set -g default-command fish 

# remap prefix to Control + a
unbind C-b
set -g prefix C-a
# bind 'C-a C-a' to type 'C-a'
bind C-a send-prefix

# turn off escape delay
set -sg escape-time 0

# reload config file
unbind r
bind r source-file ~/.tmux.conf \; display "Config reloaded!"

# enable mouse
set -g mouse on

# copy on mouse release
bind-key -T copy-mode-vi MouseDragEnd1Pane send-keys -X copy-pipe-and-cancel "xclip -in -selection clipboard" \; display-message "Copied to system clipboard!"

# vim copy style
setw -g mode-keys vi

unbind [
bind Escape copy-mode
bind C-Space copy-mode

bind -T copy-mode-vi v send -X begin-selection
bind -T copy-mode-vi y send -X copy-pipe-and-cancel 'xclip -in -selection clipboard' \; display-message "Copied to system clipboard!"
bind -T copy-mode-vi C-v send -X rectangle-toggle

# smart pane switching with awareness of vim splits
bind -n C-h run "(tmux display-message -p '#{pane_current_command}' | grep -iq vim && tmux send-keys C-h) || tmux select-pane -L"
bind -n C-j run "(tmux display-message -p '#{pane_current_command}' | grep -iq vim && tmux send-keys C-j) || tmux select-pane -D"
bind -n C-k run "(tmux display-message -p '#{pane_current_command}' | grep -iq vim && tmux send-keys C-k) || tmux select-pane -U"
bind -n C-l run "(tmux display-message -p '#{pane_current_command}' | grep -iq vim && tmux send-keys C-l) || tmux select-pane -R"
bind -n C-\ run "(tmux display-message -p '#{pane_current_command}' | grep -iq vim && tmux send-keys 'C-\\') || tmux select-pane -l"
