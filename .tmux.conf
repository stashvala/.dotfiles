# set shell
set -g default-command fish 

# 256 colors
set -g default-terminal "screen-256color"

# increase scrollback buffer size
set -g history-limit 20000

# remap prefix to Control + a
unbind C-b
set -g prefix C-a
# bind 'C-a C-a' to type 'C-a'
bind C-a send-prefix

# turn off escape delay
set -sg escape-time 0

# renumber windows when one is closed
set -g renumber-windows on

# rename window to reflect current program
setw -g automatic-rename on

# reload config file
unbind r
bind r source-file ~/.tmux.conf \; display "Config reloaded!"

# retain cwd with new pane/window
bind '%' split-window -h -c '#{pane_current_path}'  # split panes horizontal
bind '"' split-window -v -c '#{pane_current_path}'  # split panes vertically
bind c new-window -c '#{pane_current_path}' # create new window

# enable mouse
set -g mouse on

# copy on mouse release (xclip needs to be installed on the system)
bind-key -T copy-mode-vi MouseDragEnd1Pane send-keys -X copy-pipe-and-cancel "xclip -in -selection clipboard" \; display-message "Copied to system clipboard!"

# vim copy style
setw -g mode-keys vi

unbind [
bind Escape copy-mode
bind C-Space copy-mode

bind -T copy-mode-vi v send -X begin-selection
bind -T copy-mode-vi y send -X copy-pipe-and-cancel 'xclip -in -selection clipboard' \; display-message "Copied to system clipboard!"
bind -T copy-mode-vi C-v send -X rectangle-toggle

# smart pane switching with awareness of vim splits
is_vim='echo "#{pane_current_command}" | grep -iqE "(^|\/)g?(view|n?vim?)(diff)?$"'
bind -n C-h if-shell "$is_vim" "send-keys C-h" "select-pane -L"
bind -n C-j if-shell "$is_vim" "send-keys C-j" "select-pane -D"
bind -n C-k if-shell "$is_vim" "send-keys C-k" "select-pane -U"
bind -n C-l if-shell "$is_vim" "send-keys C-l" "select-pane -R"
bind -n C-\ if-shell "$is_vim" "send-keys C-\\" "select-pane -l"
